var documenterSearchIndex = {"docs":
[{"location":"models/#","page":"Models","title":"Models","text":"CurrentModule = models\nDocTestSetup = quote\n    using stats\nend","category":"page"},{"location":"models/#","page":"Models","title":"Models","text":"Modules = [models]","category":"page"},{"location":"models/#Lathe.models","page":"Models","title":"Lathe.models","text":"|====== Lathe.models =====\n\n|____________/ Accessories ___________\n\n|_____models.Pipeline([steps])\n\n|____________/ Continuous models ___________\n\n|_____models.meanBaseline(y)\n\n|_____models.LinearRegression(x,y)\n\n|_____models.LeastSquare(x,y,Type)\n\n|_____models.PowerLog(prob1,prob2)\n\n|____________/ Categorical Models ___________\n\n|_____models.LogisticRegression(x,y)\n\n|_____models.majBaseline(y)\n\n\n\n\n\n\n\n","category":"module"},{"location":"models/#Lathe.models.LeastSquare-Tuple{Any,Any,Any}","page":"Models","title":"Lathe.models.LeastSquare","text":"Least Squares is ideal for predicting continous features. Many models use Least Squares as a base to build off of.\n\n\n\nx = [7,6,5,6,5]\n\ny  = [3.4.5.6.3]\n\nxtrain = [7,5,4,5,3,5,7,8]\n\nType = :LIN\n\nmodel = Lathe.models.LeastSquare(x,y,Type)\n\ny_pred = Lathe.models.predict(model,xtrain)\n\n\n\nHYPER PARAMETERS\n\nType <- Type determines which Linear Least Square algorithm to use, :LIN, :OLS, :WLS, and :GLS are the three options.\n\n:LIN = Linear Least Square Regression\n:OLS = Ordinary Least Squares\n:WLS = Weighted Least Squares\n:GLS = General Least Squares\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.LinearRegression-Tuple{Any,Any}","page":"Models","title":"Lathe.models.LinearRegression","text":"Linear Regression is a well-known linear function used for predicting  continuous features with a mostly linear or semi-linear slope.\n\n\n\n==PARAMETERS==\n\n[y] <- Fill with your trainY values. Should be an array of shape (0,1) or (1,0)\n\n[x] <- Fill in with your trainX values. Should be an array of shape (0,1) or (1,0)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.LogisticRegression","page":"Models","title":"Lathe.models.LogisticRegression","text":"Majority class baseline is used to find the most often interpreted  classification in an array.\n\n\n\n==PARAMETERS==\n\n[X] <- Fill with your trainX values. Should be an array of shape (0,1) or (1,0)\n\n[y] <- Fill with your trainy values. Should be an array of shape (0,1) or (1,0)\n\nÎ» = .0001 <- Lambda Value\n\nfit_intercept = true <- Boolean determines whether to fit an intercept.\n\nmax_iter = 1000 <- Determines the maximum number of iterations for the model to perform.\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n\n\n","category":"function"},{"location":"models/#Lathe.models.MeanBaseline-Tuple{Any}","page":"Models","title":"Lathe.models.MeanBaseline","text":"A mean baseline is great for getting a basic accuracy score in order     to make a valid direction for your model.\n\n\n\n==PARAMETERS==\n\n[y] <- Fill with your trainY values. Should be an array of shape (0,1) or (1,0)\n\npipl = Pipeline([StandardScalar(),LinearRegression(trainX,trainy)])\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.Network-NTuple{4,Any}","page":"Models","title":"Lathe.models.Network","text":" 'Network' specifically constructs a convolutional nueral network,\n\n though this network is still being worked on in both methodology\n\n and in a physical manner,\n\nthanks for understanding.\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.Pipeline-Tuple{Any}","page":"Models","title":"Lathe.models.Pipeline","text":"Pipelines can contain a predictable Lathe model with preprocessing that occurs automatically. This is done by putting X array processing methods into the iterable steps, and then putting your Lathe model in.\n\n\n\n==PARAMETERS==\n\n[steps] <- An iterable list of methods to call for X modification. These mutations should have ALREADY BEEN MADE TO THE TRAIN X.\n\npipl = Pipeline([StandardScalar(),LinearRegression(trainX,trainy)])\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.PowerLog-Tuple{Float64,Float64}","page":"Models","title":"Lathe.models.PowerLog","text":"A powerlog can be used to perform a one-tailed test, as well as get the proper sample size for a testing population.\n\n\n\n==PARAMETERS==\n\np1 <- A Float64 percentage representing the probability of scenario one.\n\np2 <- A Float64 percentage representing the probability of scenario two. These two probability values should follow these guidelines: p1 = p1 + x = p2\n\nalpha = 0.05 <- Sets an alpha value\n\n\n\nReturns power, sample_size\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.RidgeRegression-Tuple{Any,Any}","page":"Models","title":"Lathe.models.RidgeRegression","text":"Ridge Regression is another regressor ideal for predicting linear,     continuous features.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.OneHotEncode(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"models/#Lathe.models.majClassBaseline-Tuple{Any}","page":"Models","title":"Lathe.models.majClassBaseline","text":"Majority class baseline is used to find the most often interpreted  classification in an array.\n\n\n\n==PARAMETERS==\n\n[y] <- Fill with your trainY values. Should be an array of shape (0,1) or (1,0)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\ncounts() <- Returns a dictionary with the counts of all inserted keys.\n\nhighest() <- Will return a Dictionary key with the count as well as the value for the most interpreted classification.\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#","page":"Preprocess","title":"Preprocess","text":"CurrentModule = preprocess\nDocTestSetup = quote\n    using stats\nend","category":"page"},{"location":"preprocess/#","page":"Preprocess","title":"Preprocess","text":"Modules = [preprocess]","category":"page"},{"location":"preprocess/#Lathe.preprocess","page":"Preprocess","title":"Lathe.preprocess","text":"|====== Lathe.preprocess =====\n\n|____________/ Generalized Processing ___________\n\n|_____preprocess.TrainTestSplit(array)\n\n|_____preprocess.SortSplit(array)\n\n|_____preprocess.UniformSplit(array)\n\n|____________/ Feature Scaling ___________\n\n|_____preprocess.Rescalar(array)\n\n|_____preprocess.ArbitraryRescale(array)\n\n|_____preprocess.MeanNormalization(array)\n\n|_____preprocess.StandardScalar(array)\n\n|____________/ Categorical Encoding ___________\n\n|_____preprocess.OneHotEncode(array)\n\n\n\n\n\n\n\n","category":"module"},{"location":"preprocess/#Lathe.preprocess.ArbitraryRescale-Tuple{Any}","page":"Preprocess","title":"Lathe.preprocess.ArbitraryRescale","text":"Arbitrary Rescaling scales a feature based on the minimum and maximum  of the array.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.Rescalar(array)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.MeanNormalization-Tuple{Any}","page":"Preprocess","title":"Lathe.preprocess.MeanNormalization","text":"Mean Normalization normalizes the data based on the mean.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.MeanNormalization(array)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.OneHotEncode-Tuple{Any,Any}","page":"Preprocess","title":"Lathe.preprocess.OneHotEncode","text":"One hot encoder replaces a single feature with sub arrays containing boolean values (1 or 0) for each individual category.\n\n\n\ndf = DataFrame(:A => ['w','b','w'], :B => [5, 10, 15])\n\nscaled_feature = Lathe.preprocess.OneHotEncode(df,:A)\n\n\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.Rescalar-Tuple{Any}","page":"Preprocess","title":"Lathe.preprocess.Rescalar","text":"Rescalar scales a feature based on the minimum and maximum of the array.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.Rescalar(array)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.SortSplit","page":"Preprocess","title":"Lathe.preprocess.SortSplit","text":"SortSplit sorts the data from least to greatest, and then splits it, ideal for quartile calculations.\n\n\n\narray = [5,10,15]\n\ntop25, lower75 = Lathe.preprocess.SortSplit(array,at = 0.75,rev = false)\n\n\n\nPARAMETERS:\n\nat:: Percentage value used to determine a point to split the data.\n\nrev:: Reverse, false by default, determines whether to sort least to greatest, or greatest to least.\n\n\n\n\n\n\n\n","category":"function"},{"location":"preprocess/#Lathe.preprocess.Standardize-Tuple{Any}","page":"Preprocess","title":"Lathe.preprocess.Standardize","text":"Standard Scalar z-score normalizes a feature.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.StandardScalar(array)\n\n\n\n==Functions==\n\npredict(xt) <- Returns a prediction from the model based on the xtrain value passed (xt)\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.TrainTestSplit-Tuple{Array,Float64}","page":"Preprocess","title":"Lathe.preprocess.TrainTestSplit","text":"TrainTestSplit takes either a DataFrame or an Array and splits it according to the at parameter.\n\n\n\n[data] <- Iterable dictionary, dataframe, or Array.\n\na <- Percentage value used to determine a point to split the data.\n\n\n\n\n\n\n\n\n\n","category":"method"},{"location":"preprocess/#Lathe.preprocess.UniformSplit","page":"Preprocess","title":"Lathe.preprocess.UniformSplit","text":"Uniform Split does the exact same thing as ArraySplit(), but observations are returned split, but unsorted and unshuffled.\n\n\n\narray = [5,10,15]\n\ntest, train = Lathe.preprocess.UniformSplit(array,at = 0.75)\n\n\n\nPARAMETERS:\n\nat:: Percentage value used to determine a point to split the data.\n\n\n\n\n\n","category":"function"},{"location":"preprocess/#Lathe.preprocess.UnitLScale-Tuple{Any}","page":"Preprocess","title":"Lathe.preprocess.UnitLScale","text":"FUNCTION NOT YET WRITTEN\n\nUnit L Scaling uses eigen values to normalize the data.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.UnitLScale(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#","page":"Stats","title":"Stats","text":"CurrentModule = stats\nDocTestSetup = quote\n    using stats\nend","category":"page"},{"location":"stats/#","page":"Stats","title":"Stats","text":"Modules = [stats]","category":"page"},{"location":"stats/#Lathe.stats","page":"Stats","title":"Lathe.stats","text":"|====== Lathe.stats ======\n\n| ~~~~~~~~~~ Base ~~~~~~~~~~~\n\n|_____stats.mean(array)\n\n|_____stats.mode(array)\n\n|_____stats.variance(array)\n\n|_____stats.confiints(data,confidence = .95)\n\n|_____stats.standarderror(array)\n\n|_____stats.std(data)\n\n|_____stats.correlationcoeff(x,y)\n\n|_____stats.z(array)\n\n|_____stats.firstquar(array)\n\n|_____stats.secondquar(array)\n\n|_____stats.thirdquar(array)\n\n| ~~~~~~~~~~ Inferential ~~~~~~~~~~~\n\n|_____stats.independent_t(sample,general)\n\n|_____stats.spearman(var1,var2)\n\n|_____stats.pearson(x,y)\n\n|_____stats.chisqu(array)\n\n|_____stats.sign(array)\n\n|_____stats.f_test(sample,general)\n\n| ~~~~~~~~~~ Bayesian ~~~~~~~~~~~\n\n|_____stats.bay_ther(p,a,b)\n\n|_____stats.cond_prob(p,a,b)\n\n| ~~~~~~~~~~ Distributions ~~~~~~~~~~~\n\n|====== validate ======\n\n|____________/ Metrics ___________\n\n|_____validate.mae(actual,pred)\n\n|_____validate.r2(actual,pred)\n\n\n\n\n\n\n\n","category":"module"},{"location":"stats/#Lathe.stats.bernoulli_dist-Tuple{}","page":"Stats","title":"Lathe.stats.bernoulli_dist","text":"Function Not yet written\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.binomial_dist-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.binomial_dist","text":"Binomial Distribution is a distribution well known for its use in      statistical tests and decision making models.\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.chi_dist-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.chi_dist","text":"FUNCTION NOT YET WRITTEN\n\nChi Distribution in another well-known distribution well known for being used in statistical tests.\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.chisq-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.chisq","text":"Returns a probability using a chi squared distribution.\n\n\n\nvar1 = [5,10,15]\n\nvar2 = [5,4,3,5,6]\n\np = Lathe.stats.chisq(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.cond_prob-Tuple{Any,Any,Any}","page":"Stats","title":"Lathe.stats.cond_prob","text":"Performs Bayesian Conditional Probability and returns probability.\n\n\n\nprob = .50\n\nprior = .20\n\nevidence = .30\n\np = Lathe.stats.cond_prob(prob,prior,evidence)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.confints","page":"Stats","title":"Lathe.stats.confints","text":"Returns the confidence intervals of given data.\n\n\n\narray = [5,10,15]\n\nconfidence = .98\n\nlow, high = Lathe.stats.confints(array,confidence)\n\n\n\nPARAMETERS\n\nconfidence: Confidence is a float percentage representing the level of confidence required in your test. The confidence metric is used exclusively for calculating the interval.\n\n\n\n\n\n","category":"function"},{"location":"stats/#Lathe.stats.correlationcoeff-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.correlationcoeff","text":"Calculates the Correlation Coeffiecient of between two features\n\n\n\nx = [5,10,15]\n\ny = [5,10,15]\n\nr = Lathe.stats.correlationcoeff(x,y)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.f_test-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.f_test","text":"An F test returns a probability of correlation, and is used similarly to a T test.\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.firstquar-Tuple{Any}","page":"Stats","title":"Lathe.stats.firstquar","text":"Returns the point in an array located at 25 percent of the sorted data.\n\n\n\narray = [5,10,15]\n\nq1 = Lathe.stats.firstquar(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.getranks","page":"Stats","title":"Lathe.stats.getranks","text":"Ranks indices in an array based on quantitative weight (count of the numbers) and returns a new array of the ranks of each column. This function is made primarily for the Wilcox Rank-Sum test.\n\n\n\narray = [5,10,15]\n\nq2 = Lathe.stats.secondquar(array)\n\n\n\n\n\n\n\n","category":"function"},{"location":"stats/#Lathe.stats.independent_t-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.independent_t","text":"Performs an independent T test.\n\n\n\nsample = [5,10,15] general = [15,25,35]\n\nt = Lathe.stats.independent_t(sample,general)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.mae-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.mae","text":"Mean absolute error (MAE) subtracts two arrays and averages the difference.\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.mean-Tuple{Any}","page":"Stats","title":"Lathe.stats.mean","text":"Calculates the mean of a given array.\n\n\n\narray = [5,10,15]\n\nmean = Lathe.stats.mean(array)\n\nprintln(mean)\n\n10\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.median-Tuple{Any}","page":"Stats","title":"Lathe.stats.median","text":"Calculates the median (numerical center) of a given array.\n\n\n\narray = [5,10,15]\n\nmedian = Lathe.stats.median(array)\n\nprintln(median)\n\n10\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.mode-Tuple{Any}","page":"Stats","title":"Lathe.stats.mode","text":"Gives the digit most common in a given array\n\n\n\narray = [5,10,15,15,10,5,10]\n\nmode = Lathe.stats.mode(array)\n\nprintln(mode)\n\n10\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.mse-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.mse","text":"Mean Square error (MSE) subtracts two arrays, squares the difference, and averages the result\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.normal_dist-Tuple{Any}","page":"Stats","title":"Lathe.stats.normal_dist","text":"Standard Scalar z-score normalizes a feature.\n\n\n\narray = [5,10,15]\n\nscaled_feature = Lathe.preprocess.StandardScalar(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.paired_t-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.paired_t","text":"THIS FUNCTION IS NOT YET WRITTEN\n\nPaired T (Dependent T) is a T-test that doesn't require a sample.\n\n\n\narray = [5,10,15]\n\nq2 = Lathe.stats.paired_t(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.pearson-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.pearson","text":"Returns a probability using a Pearson correlation.\n\n\n\nx = [5,10,15]\n\ny = [5,4,3,5,6]\n\nr = Lathe.stats.spearman(x,y)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.r2-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.r2","text":"R squared is the correlation coefficient of regression, and is found by squaring the correlation coefficient.\n\n\n\narray = [5,10,15]\n\nr = Lathe.stats.anova(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.secondquar-Tuple{Any}","page":"Stats","title":"Lathe.stats.secondquar","text":"Returns the point in an array located at 50 percent of the sorted data. The second quartile is also known as the median, or the middle of the sorted data.\n\n\n\narray = [5,10,15]\n\nq2 = Lathe.stats.secondquar(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.sign-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.sign","text":"The Sign test determines correlation through negative and positive placement with binomial distribution.\n\n\n\nvar1 = [5,10,15]\n\nvar2 = [19,25,30]\n\np = Lathe.stats.sign(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.spearman-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.spearman","text":"Returns a probability using a Spearman correlation.\n\n\n\nvar1 = [5,10,15]\n\nvar2 = [5,4,3,5,6]\n\nr = Lathe.stats.spearman(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.std-Tuple{Any}","page":"Stats","title":"Lathe.stats.std","text":"Calculates the Standard Deviation of a given array.\n\n\n\narray = [5,10,15]\n\nstd = Lathe.stats.std(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.ste-Tuple{Any}","page":"Stats","title":"Lathe.stats.ste","text":"Calculates the Standard Error of an array.\n\n\n\narray = [5,10,15]\n\nste = Lathe.stats.standarderror(array)\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.thirdquar-Tuple{Any}","page":"Stats","title":"Lathe.stats.thirdquar","text":"Returns the point in an array located at 75 percent of the sorted data.\n\n\n\narray = [5,10,15]\n\nq2 = Lathe.stats.secondquar(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.variance-Tuple{Any}","page":"Stats","title":"Lathe.stats.variance","text":"Gives the variance of an array..\n\n\n\narray = [5,10,15]\n\nvariance = Lathe.stats.variance(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.wilcoxrs-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.wilcoxrs","text":"FUNCTION NOT YET WRITTEN\n\nWilcox Sum Rank Tests are used to determine a probability with ranks\n\n\n\nvar1 = [5,10,15]\n\nvar2 = [19,25,30]\n\np = Lathe.stats.wilcoxsr(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.wilcoxsr-Tuple{Any,Any}","page":"Stats","title":"Lathe.stats.wilcoxsr","text":"FUNCTION NOT YET WRITTEN\n\nWilcox Sum Rank Tests are used to determine a probability with ranks\n\n\n\nvar1 = [5,10,15]\n\nvar2 = [19,25,30]\n\np = Lathe.stats.wilcoxsr(var1,var2)\n\n\n\n\n\n\n\n","category":"method"},{"location":"stats/#Lathe.stats.z-Tuple{Any}","page":"Stats","title":"Lathe.stats.z","text":"Calculates the Z score of a given array.\n\n\n\narray = [5,10,15]\n\nz = Lathe.stats.z(array)\n\n\n\n\n\n\n\n","category":"method"},{"location":"#Adding-Lathe-1","page":"Index","title":"Adding Lathe","text":"","category":"section"},{"location":"#Pkg-Registry-1","page":"Index","title":"Pkg Registry","text":"","category":"section"},{"location":"#","page":"Index","title":"Index","text":"Lathe can be added using Pkg.","category":"page"},{"location":"#","page":"Index","title":"Index","text":"using Pkg\nPkg.add(\"Lathe\")","category":"page"},{"location":"#Git-Repo-1","page":"Index","title":"Git Repo","text":"","category":"section"},{"location":"#","page":"Index","title":"Index","text":"Lathe can also be added directly from the Github repo.","category":"page"},{"location":"#","page":"Index","title":"Index","text":"julia> ]\npkg> add https://github.com/emmettgb/Lathe.jl/","category":"page"},{"location":"#Unstable-1","page":"Index","title":"Unstable","text":"","category":"section"},{"location":"#","page":"Index","title":"Index","text":"If you desire, you can also add the unstable branch from Lathe's Github repo.  This will provide the advantage of newer features, but the module may be unstable","category":"page"},{"location":"#","page":"Index","title":"Index","text":" julia> ]\n pkg> add Lathe#Unstable\n ```\n## Versions\nStarting with the release of Lathe Butterball (0.1.0), you can add any version of Lathe.","category":"page"},{"location":"#","page":"Index","title":"Index","text":"@example julia> ] pkg> add Lathe#0.1.0 pkg> add Lathe#0.1.1","category":"page"},{"location":"#","page":"Index","title":"Index","text":"# Index","category":"page"},{"location":"#","page":"Index","title":"Index","text":"@contents ```","category":"page"}]
}
